<?xml version="1.0" encoding="utf-8"?>
<root><!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
	<data name="About.Text" xml:space="preserve">
		<value>Somos Daniel Forero y Brian Tran.

Esta aplicacion fue creada para el proyecto de culminacion de nuestro programa de Ingenieria de software y technologia en Conestoga College

Esperamos que usted pueda beneficiarse con esta aplicacion!</value>
	</data>
	<data name="About.Title" xml:space="preserve">
		<value>Constructor de Robot de Clearpath</value>
	</data>
	<data name="AvailableLanguages" xml:space="preserve">
		<value>IDIOMAS</value>
	</data>
	<data name="Black" xml:space="preserve">
		<value>NEGRO</value>
	</data>
	<data name="Blue" xml:space="preserve">
		<value>AZUL</value>
	</data>
	<data name="Cancel" xml:space="preserve">
		<value>CANCELAR</value>
	</data>
	<data name="Close" xml:space="preserve">
		<value>CERRAR</value>
	</data>
	<data name="Color" xml:space="preserve">
		<value>COLOR:</value>
	</data>
	<data name="Create" xml:space="preserve">
		<value>CREAR</value>
	</data>
	<data name="Custom" xml:space="preserve">
		<value>PERSONALIZADO</value>
	</data>
	<data name="CustomCubeoid" xml:space="preserve">
		<value>CARGA UTIL PERSONALIZADO</value>
	</data>
	<data name="CustomCubeoid.MaxLimit" xml:space="preserve">
		<value>Una carga util no puede tener anchura, altura, or profundidad mas de 25.0</value>
	</data>
	<data name="CustomEllipses" xml:space="preserve">
		<value>PERSONALIZADO...</value>
	</data>
	<data name="Cyan" xml:space="preserve">
		<value>CIAN</value>
	</data>
	<data name="DeletingSensor" xml:space="preserve">
		<value>Eliminando carga util</value>
	</data>
	<data name="DeletingSensor.AreYouSure" xml:space="preserve">
		<value>Estas seguro que quieres eliminar </value>
	</data>
	<data name="Depth" xml:space="preserve">
		<value>PROFUNDIDAD:</value>
	</data>
	<data name="Email.Error" xml:space="preserve">
		<value>Se ha producido un error. Por favor, intentelo de nuevo.</value>
	</data>
	<data name="Email.Success" xml:space="preserve">
		<value>Su correo electronico ha sido enviado! Usted recibira una copia pronto.</value>
	</data>
	<data name="Form.Country" xml:space="preserve">
		<value>Pais*</value>
	</data>
	<data name="Form.Email" xml:space="preserve">
		<value>Direccion de correo electronico*</value>
	</data>
	<data name="Form.FirstName" xml:space="preserve">
		<value>Nombre*</value>
	</data>
	<data name="Form.Industry" xml:space="preserve">
		<value>Industria*</value>
	</data>
	<data name="Form.LastName" xml:space="preserve">
		<value>Apellido*</value>
	</data>
	<data name="Form.NA" xml:space="preserve">
		<value>NO APLICA</value>
	</data>
	<data name="Form.OrganizationName" xml:space="preserve">
		<value>Nombre de organizacion*</value>
	</data>
	<data name="Form.State" xml:space="preserve">
		<value>Estado/Provincia*</value>
	</data>
	<data name="Green" xml:space="preserve">
		<value>VERDE</value>
	</data>
	<data name="Height" xml:space="preserve">
		<value>ALTURA:</value>
	</data>
	<data name="Help.Text" xml:space="preserve">
		<value>- Seleccione cargas utiles a la izquierda
- Haga (Click-Izquierdo) en la carga util o en su nombre a la derecha para seleccionarla
- Oprima (T) para mover la carga util
- Oprima (R) para girar la carga util
- Oprima (ESC) o haga (Click-Izquierdo) en el fondo para enfocar en el robot
- Clickea en el boton-alternaror de Click-Derecho en la barra de herramientas (icono del mundo) para alternar entre modo de orbito y modo de FPS
- Sostenga (Click-Derecho) para entrar al un modo de camara basado en el boton-alternaror
    - Modo de Orbito (icono del mundo)
        - Mueva el raton para mover la camara alrededor de la carga util, o el robot, en orbito
        - Sostenga (SHIFT) para bajar la velocidad
    - Modo de FPS (icono de munto de mira)
        - Mueva el raton para apuntar la camara
        - Use (W)(A)(S)(D) para mover la camara en espacio 3D.
        - Sostenga (SHIFT) para bajar la velocidad
- Cuando estes listo, use el boton de correo electronico arriba para mandarnos su dise√±o!</value>
	</data>
	<data name="Help.Title" xml:space="preserve">
		<value>Como usar esta aplicacion</value>
	</data>
	<data name="LoadingSensor" xml:space="preserve">
		<value>Cargando carga util.</value>
	</data>
	<data name="Magenta" xml:space="preserve">
		<value>MAGENTA</value>
	</data>
	<data name="Mode.CameraControl" xml:space="preserve">
		<value>MODO: CONTROL DE LA CAMARA</value>
	</data>
	<data name="Mode.Orbit" xml:space="preserve">
		<value>MODO: ORBITA</value>
	</data>
	<data name="Mode.Rotate" xml:space="preserve">
		<value>MODO: GIRAR</value>
	</data>
	<data name="Mode.Translate" xml:space="preserve">
		<value>MODO: MOVIMIENTO</value>
	</data>
	<data name="Name" xml:space="preserve">
		<value>NOMBRE:</value>
	</data>
	<data name="No" xml:space="preserve">
		<value>NO</value>
	</data>
	<data name="Okay" xml:space="preserve">
		<value>BUENO</value>
	</data>
	<data name="Parts" xml:space="preserve">
		<value>CARGAS UTILES</value>
	</data>
	<data name="PleaseWait" xml:space="preserve">
		<value>Un momento, por favor...</value>
	</data>
	<data name="Red" xml:space="preserve">
		<value>ROJO</value>
	</data>
	<data name="ResetAxes" xml:space="preserve">
		<value>RESTABLECER EJES</value>
	</data>
	<data name="ResetPosition" xml:space="preserve">
		<value>RESETEAR POSICION</value>
	</data>
	<data name="ResetRotation" xml:space="preserve">
		<value>RESETEAR ROTACION</value>
	</data>
	<data name="SelectRobotBase" xml:space="preserve">
		<value>ESCOJA UN ROBOT</value>
	</data>
	<data name="Send" xml:space="preserve">
		<value>ENVIAR</value>
	</data>
	<data name="Sensors" xml:space="preserve">
		<value>CARGAS UTILES</value>
	</data>
	<data name="White" xml:space="preserve">
		<value>BLANCO</value>
	</data>
	<data name="Width" xml:space="preserve">
		<value>ANCHURA:</value>
	</data>
	<data name="Yellow" xml:space="preserve">
		<value>AMARILLO</value>
	</data>
	<data name="Yes" xml:space="preserve">
		<value>SI</value>
	</data>
</root>